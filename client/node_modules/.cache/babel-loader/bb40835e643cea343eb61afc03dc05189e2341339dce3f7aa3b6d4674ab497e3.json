{"ast":null,"code":"var _jsxFileName = \"C:\\\\mernblog\\\\client\\\\src\\\\pages\\\\CreatePost.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport 'react-quill/dist/quill.snow.css';\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modules = {\n  toolbar: [[{\n    header: [1, 2, false]\n  }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n    list: 'ordered'\n  }, {\n    list: 'bullet'\n  }, {\n    indent: '-1'\n  }, {\n    indent: '+1'\n  }], ['link', 'image'], ['clean']]\n};\nconst formats = ['header', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image'];\nexport default function CreatePost() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [summary, setSummary] = useState('');\n  const [content, setContent] = useState('');\n  const [files, setFiles] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  async function createNewPost(ev) {\n    const data = new FormData();\n    data.set('title', title);\n    data.set('summary', summary);\n    data.set('content', content);\n    data.set('file', files[0]);\n    ev.preventDefault();\n    console.log(files);\n    const response = await fetch('http://localhost:4000/post', {\n      method: 'POST',\n      body: data,\n      credentials: 'include'\n    });\n    if (response.ok) {\n      setRedirect(true);\n    }\n  }\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 14\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: createNewPost,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"title\",\n      placeholder: 'Title',\n      value: title,\n      onChange: ev => setTitle(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"summary\",\n      placeholder: 'Summary',\n      value: summary,\n      onChange: ev => setSummary(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: ev => setFiles(ev.target.files)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n      value: content,\n      onChange: newValue => setContent(newValue),\n      module: modules,\n      formats: formats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginTop: '5px'\n      },\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 1\n  }, this);\n}\n_s(CreatePost, \"uH9cWkN4Y+ABAVoVYnL+MpbmdCg=\");\n_c = CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["useState","ReactQuill","Navigate","jsxDEV","_jsxDEV","modules","toolbar","header","list","indent","formats","CreatePost","_s","title","setTitle","summary","setSummary","content","setContent","files","setFiles","redirect","setRedirect","createNewPost","ev","data","FormData","set","preventDefault","console","log","response","fetch","method","body","credentials","ok","to","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","children","type","placeholder","value","onChange","target","newValue","module","style","marginTop","_c","$RefreshReg$"],"sources":["C:/mernblog/client/src/pages/CreatePost.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\nconst modules={\r\n    toolbar: [\r\n        [{ header: [1, 2, false] }],\r\n        ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n        [\r\n          { list: 'ordered' },\r\n          { list: 'bullet' },\r\n          { indent: '-1' },\r\n          { indent: '+1' },\r\n        ],\r\n        ['link', 'image'],\r\n        ['clean'],\r\n      ],\r\n\r\n};\r\n\r\nconst formats=[\r\n   'header',\r\n   'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n   'list', 'bullet', 'indent',\r\n   'link','image'\r\n\r\n];\r\nexport default function CreatePost(){\r\n    const[title,setTitle]=useState('');\r\n    const[summary,setSummary]=useState('');\r\n    const[content,setContent]=useState('');\r\n    const[files,setFiles]=useState('');\r\n    const[redirect,setRedirect]=useState(false);\r\n\r\n    async function createNewPost(ev){\r\n      const data=new FormData();\r\n      data.set('title',title);\r\n      data.set('summary',summary);\r\n      data.set('content',content);\r\n      data.set('file',files[0])\r\n      ev.preventDefault();\r\n      console.log(files);\r\n\r\n      const response=await fetch('http://localhost:4000/post',{\r\n        method:'POST',\r\n        body:data,\r\n        credentials:'include',\r\n\r\n   })\r\n   if(response.ok){\r\n      setRedirect(true);\r\n   }\r\n\r\n\r\n    }\r\n\r\n    if(redirect){\r\n      return <Navigate to={'/'}/>\r\n\r\n    }\r\n    \r\n    return(\r\n<form onSubmit={createNewPost}>\r\n     <input type=\"title\" \r\n      placeholder={'Title'}\r\n      value={title}\r\n      onChange={ev=>setTitle(ev.target.value)}/>\r\n     <input type=\"summary\"\r\n      placeholder={'Summary'}\r\n       value={summary}\r\n       onChange={ev=>setSummary(ev.target.value)}\r\n       />\r\n     <input type='file'\r\n      onChange={ev=>setFiles(ev.target.files)}/>\r\n     <ReactQuill\r\n       value={content}\r\n       onChange={newValue=>setContent(newValue)}\r\n       module={modules}\r\n       formats={formats}/>\r\n     <button style={{marginTop:'5px'}}>Create Post</button>\r\n</form>   \r\n )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}